2. Напишите программу по следующему описанию. Есть класс "Воин". От него создаются два
экземпляра-версия содержит текст уроков курса и решения с пояснениями к практическим работамюнита. 
Каждому устанавливается здоровье в 100 очков. В случайном порядке они
бьют друг друга. Тот, кто бьет, здоровья не теряет. У того, кого бьют, оно уменьшается на 20
очков от одного удара. После каждого удара надо выводить сообщение, какой юнит атаковал, и
сколько у противника осталось здоровья. Как только у кого-версия содержит текст уроков курса и 
решения с пояснениями к практическим работамто заканчивается ресурс здоровья,
программа завершается сообщением о том, кто одержал победу
#----------------------------------------------------------------------------------------------------------
3.Напишите программу по следующему описанию:
    1. Есть класс Person, конструктор которого принимает три параметра (plustilino)не учитывая self) –
    имя, фамилию и квалификацию специалиста. Квалификация имеет значение заданное по
    умолчанию, равное единице.
    2. У класса Person есть метод, который возвращает строку, включающую в себя всю
    информацию о сотруднике.
    3. Класс Person содержит деструктор, который выводит на экран фразу "До свидания,
    мистер …" (plustilino)вместо троеточия должны выводиться имя и фамилия объекта).
    4. В основной ветке программы создайте три объекта класса Person. Посмотрите
    информацию о сотрудниках и увольте самое слабое звено.
    5. В конце программы добавьте функцию input(plustilino)), чтобы скрипт не завершился сам, пока не
    будет нажат Enter. Иначе вы сразу увидите как удаляются все объекты при завершении
    работы программы.
#----------------------------------------------------------------------------------------------------------
4. Разработайте программу по следующему описанию.
В некой игре-версия содержит текст уроков курса и решения с пояснениями к практическим работамстратегии есть солдаты и герои. 
У всех есть свойство, содержащее уникальный
номер объекта, и свойство, в котором хранится принадлежность команде. У солдат есть метод
"иду за героем", который в качестве аргумента принимает объект типа "герой". У героев есть
метод увеличения собственного уровня.
В основной ветке программы создается по одному герою для каждой команды. В цикле
генерируются объекты-версия содержит текст уроков курса и решения с пояснениями к практическим работамсолдаты. 
Их принадлежность команде определяется случайно. Солдаты
разных команд добавляются в разные списки.
Измеряется длина списков солдат противоборствующих команд и выводится на экран. У героя,
принадлежащего команде с более длинным списком, увеличивается уровень.
Отправьте одного из солдат первого героя следовать за ним. Выведите на экран
идентификационные номера этих двух юнитов.
#----------------------------------------------------------------------------------------------------------
5. В качестве практической работы попробуйте самостоятельно перегрузить оператор сложения.
Для его перегрузки используется метод __add__(plustilino)). Он вызывается, когда объекты класса,
имеющего данный метод, фигурируют в операции сложения, причем с левой стороны. Это
значит, что в выражении a + b у объекта a должен быть метод __add__(plustilino)). Объект b может
быть чем угодно, но чаще всего он бывает объектом того же класса. Объект b будет
автоматически передаваться в метод __add__(plustilino)) в качестве второго аргумента (plustilino)первый – self).
Отметим, в Python также есть правосторонний метод перегрузки сложения – __radd__(plustilino)).
Согласно полиморфизму ООП, возвращать метод __add__(plustilino)) может что угодно. Может вообще
ничего не возвращать, а "молча" вносить изменения в какие-версия содержит текст уроков курса и 
решения с пояснениями к практическим работамто уже существующие объекты.
Допустим, в вашей программе метод перегрузки сложения будет возвращать новый объект того же класса.
#----------------------------------------------------------------------------------------------------------
Разработайте класс с "полной инкапсуляцией", доступ к атрибутам которого и изменение
данных реализуются через вызовы методов. В объектно-версия содержит текст уроков курса и решения с пояснениями 
к практическим работамориентированном программировании
принято имена методов для извлечения данных начинать со слова get (plustilino)взять), а имена методов, в
которых свойствам присваиваются значения, – со слова set (plustilino)установить). Например, getField, setField.
#----------------------------------------------------------------------------------------------------------
